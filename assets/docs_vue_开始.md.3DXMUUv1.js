import{_ as i,c as a,o as e,ag as n}from"./chunks/framework.C78-raJP.js";const o=JSON.parse('{"title":"vue 2","description":"","frontmatter":{},"headers":[],"relativePath":"docs/vue/开始.md","filePath":"docs/vue/开始.md","lastUpdated":1749437583000}'),t={name:"docs/vue/开始.md"};function l(h,s,k,p,r,E){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="vue-2" tabindex="-1">vue 2 <a class="header-anchor" href="#vue-2" aria-label="Permalink to &quot;vue 2&quot;">​</a></h1><h2 id="_1-vue渐进式的理解" tabindex="-1">1.vue渐进式的理解 <a class="header-anchor" href="#_1-vue渐进式的理解" aria-label="Permalink to &quot;1.vue渐进式的理解&quot;">​</a></h2><h2 id="_1-vue父子组件生命周期加载顺序" tabindex="-1">1.vue父子组件生命周期加载顺序 <a class="header-anchor" href="#_1-vue父子组件生命周期加载顺序" aria-label="Permalink to &quot;1.vue父子组件生命周期加载顺序&quot;">​</a></h2><ul><li>加载渲染过程:父beforeCreate -&gt; 父created -&gt; 子beforeCreate -&gt; 子created -&gt; 父beforeMount -&gt; 父mounted -&gt; 子beforeMount -&gt; 子mounted</li><li>销毁过程: 父beforeDestroy -&gt; 子beforeDestroy -&gt; 子destroyed -&gt; 父destroyed</li><li>更新过程:父beforeUpdate -&gt; 父updated -&gt; 子beforeUpdate -&gt; 子updated</li></ul><h2 id="_2-vue2不能监听数组下标的原因" tabindex="-1">2.vue2不能监听数组下标的原因 <a class="header-anchor" href="#_2-vue2不能监听数组下标的原因" aria-label="Permalink to &quot;2.vue2不能监听数组下标的原因&quot;">​</a></h2><ul><li>Vue2 用的是 <code>Object.defineProperty</code> 劫持数据实现的视图双向绑定。</li><li><code>Object.defineProperty</code> 是可以劫持数组的</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Object.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">keys</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">forEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Object.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">defineProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr,key,{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;key:&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> key)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;value:&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">value)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arr[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arr[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><ul><li>真实情况：是<code>Object.defineProperty</code>可以用来劫持数组，而vue2没有用来劫持数组。</li><li>原因：<code>Object.defineProperty</code>是属性级别的劫持，如果按照上面代码的方式上去劫持数组，随着数组长度增加，会有很大的性能损耗，导致框架的不稳定，因此vue2放弃一定的用户便捷性，提供了$set方法去操作数组，以最大程度保证框架的性能稳定。</li></ul>`,8)]))}const g=i(t,[["render",l]]);export{o as __pageData,g as default};
