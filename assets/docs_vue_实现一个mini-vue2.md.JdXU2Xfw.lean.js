import{_ as h,c as l,o as k,ag as n,j as i,t as a,a as p}from"./chunks/framework.Ds6Eueu6.js";const t="/assets/vue2-mini.e__XuOqE.svg",o=JSON.parse('{"title":"实现一个mini-vue2","description":"","frontmatter":{},"headers":[],"relativePath":"docs/vue/实现一个mini-vue2.md","filePath":"docs/vue/实现一个mini-vue2.md","lastUpdated":1745229529000}'),e={name:"docs/vue/实现一个mini-vue2.md"};function E(d,s,r,g,y,F){return k(),l("div",null,[s[0]||(s[0]=n("",27)),i("p",null,"先匹配到el中填写的节点，创建一个文档碎片，将节点添加到文档碎片中，然后遍历文档碎片中的节点，如果节点是文本节点，则判断是否是"+a()+"，如果是则将"+a()+"中的内容替换为data中的对应属性，如果不是则不做处理",1),s[1]||(s[1]=n("",3)),i("p",null,"上面已经实现将 html中的模板（"+a()+"）替换为data中的属性，但是当data中的属性发生变化时，视图并不会更新，所以需要实现一个watcher，当data中的属性发生变化时，通知视图更新",1),s[2]||(s[2]=i("h4",{id:"_2-6-组装watcher与dep",tabindex:"-1"},[p("2.6 组装Watcher与Dep "),i("a",{class:"header-anchor",href:"#_2-6-组装watcher与dep","aria-label":'Permalink to "2.6 组装Watcher与Dep"'},"​")],-1)),s[3]||(s[3]=i("p",null,"目前已经实现数据劫持，数据代理，compile，还需要以下工作",-1)),i("ol",null,[i("li",null,"需要创建一些订阅者，其update事件就是在接收到更新后的数据值，然后去更新dom，因为要更新dom，所以要在compile中创建。在编译过程中，将每个"+a()+"中的属性与watcher进行绑定，当属性发生变化时，通知watcher更新，所以，有多少个模板节点，就有多少个watcher",1)]),s[4]||(s[4]=n("",13))])}const A=h(e,[["render",E]]);export{o as __pageData,A as default};
